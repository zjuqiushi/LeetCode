Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in 
the array which gives the sum of target.

Note: The solution set must not contain duplicate quadruplets.

题意：给定一个数组，从中找出四个数，其相加和等于target，求出所有不重复的解

思路：
1.对数组排序
2.确定前两个数，用left和right分别指向剩余数组的头尾，若<target, left++; >target, right--

Me:
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();
        set<vector<int>> res;
        sort(nums.begin(), nums.end());
        for(int i=0;i<n-3;i++)
        {
            for(int j=i+1;j<n-2;j++)
            {
                if(nums[i] + nums[j] + nums[j+1] + nums[j+2] > target) break;
                int left = j+1, right = n-1;
                while(left < right)
                {
                    int sum = nums[i] + nums[j] + nums[left] + nums[right];
                    if(sum == target)
                    {
                        vector<int> tmp = {nums[i], nums[j], nums[left], nums[right]};
                        res.insert(tmp);
                        left++;right--;
                    }
                    else if(sum > target)
                        right--;
                    else
                        left++;
                }
                
            }
        }
        return vector<vector<int>> (res.begin(), res.end());
    }
};
