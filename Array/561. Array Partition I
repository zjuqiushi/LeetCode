Given an array of 2n integers, your task is to group these integers into n pairs of integer, say (a1, b1), (a2, b2), ..., (an, bn) which makes sum of min(ai, bi) for all i from 1 to n as large as possible.

Example 1:
Input: [1,4,3,2]

Output: 4
Explanation: n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).
Note:
n is a positive integer, which is in the range of [1, 10000].
All the integers in the array will be in the range of [-10000, 10000].

题意：长度为2n的数组，求n个min pair的最小值

思路：对数组排序，从i=0开始，隔两个开始相加

Me:
class Solution {
public:
    int arrayPairSum(vector<int>& nums) {
        if(nums.size() == 0) return 0;
        int sum = 0;
        int n = nums.size() / 2;
        sort(nums.begin(), nums.end());
        for(int i=0;i<n;i++)
            sum += nums[2*i];
        return sum;
    }
};

Discuss:
class Solution {
public:
    int arrayPairSum(vector<int>& nums) {
        int value = 0;
        sort(nums.begin(), nums.end());
        for(size_t i = 0; i < nums.size(); i+=2) {
            value+=nums[i];
        }
        return value;
    }
};
