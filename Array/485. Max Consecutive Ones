Given a binary array, find the maximum number of consecutive 1s in this array.

Example 1:
Input: [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s.
    The maximum number of consecutive 1s is 3.
Note:

The input array will only contain 0 and 1.
The length of input array is a positive integer and will not exceed 10,000


Me:
class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        int ans = 0, start = 0;
        for(int i=0; i<nums.size(); i++)
        {
            if(nums[i] == 0)
            {
                if(i - start > ans)
                    ans = i - start;
                start = i+1;
            }
        }
        if(nums[nums.size() - 1] == 1 && nums.size() - start > ans)
            ans = nums.size() - start;
        return ans;
    }
};

Discuss:
class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        int cnt = 0, res = 0;
        for (int i = 0; i < nums.size(); ++i) {
            if (nums[i] == 0) {
                res = max(res, cnt);
                cnt = 0;
            } else {
                ++cnt;
            }
        }
        res = max(res, cnt);
        return res;
    }
};
