Given a sorted array consisting of only integers where every element appears twice except for one element which appears once. Find this single element that appears only once.

Example 1:
Input: [1,1,2,3,3,4,4,8,8]
Output: 2
Example 2:
Input: [3,3,7,7,10,11,11]
Output: 10
Note: Your solution should run in O(log n) time and O(1) space.

题意：求出数组中出现一次的元素

思路：对每个元素进行异或操作，最后的结果就是只出现一次的元素

class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int ans = 0;
        for(int i=0; i<nums.size(); i++)
            ans ^= nums[i];
        
        return ans;
    }
};
